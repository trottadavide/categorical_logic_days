Organising syntax in arithmetic universes

“Arithmetic Universes” — aka list-arithmetic pretoposes — were proposed by Joyal as a categorical setting for syntax, and developed into their current form by (among others) Maietti and Vickers. But what does it mean that they give a setting for syntax?

One good answer is that they should host free models of finitely presented essentially algebraic theories. The essential techniques for this are well established, but a thorough general treatment is elusive — not perhaps because it is difficult, but because a head-on approach, carried through carefully, is gruellingly bureaucratic as much for readers as writers.

Two organising principles help a lot. The other is using a well-chosen presentation of essentially algebraic theories. The other is taking advantage of rich schemes of inductive types — in particular, indexed-inductive and (quotient) inductive-inductive types — and established techniques for reducing very general such schemes to basic primitives. I will show how these techniques can be applied in arithmetic universes (and more generally locoses), with a little care to handle finitariness, to build up from the basic primitives to more general schemes of inductive types, and hence provide free models of essentially algebraic theories.